{
	"name": "ADF_IGM2323001_DW_Load_foresight_mrd_snv_genotype_fact",
	"properties": {
		"description": "Dataflow to implement SCD Type 2 for igm2323001_foresight_mrd_snv_genotype_fact Table",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_AzureSQL",
						"type": "DatasetReference"
					},
					"name": "sourceRaw"
				},
				{
					"dataset": {
						"referenceName": "DS_AzureSQL",
						"type": "DatasetReference"
					},
					"name": "sourceFact"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_AzureSQL",
						"type": "DatasetReference"
					},
					"name": "InsertNewData"
				},
				{
					"dataset": {
						"referenceName": "DS_AzureSQL",
						"type": "DatasetReference"
					},
					"name": "UpdateFact"
				}
			],
			"transformations": [
				{
					"name": "deriveDateColumns"
				},
				{
					"name": "selectFact"
				},
				{
					"name": "filterFact"
				},
				{
					"name": "lookupFact"
				},
				{
					"name": "selectColumns"
				},
				{
					"name": "filterNotNullStudySessionID"
				},
				{
					"name": "UpdateDateColumns"
				},
				{
					"name": "AlterRowUpdate"
				}
			],
			"scriptLines": [
				"source(output(",
				"          study_id as string,",
				"          donor as string,",
				"          session_id as string,",
				"          sample_number as string,",
				"          timepoint as string,",
				"          chr as string,",
				"          pos as string,",
				"          ref as string,",
				"          alt as string,",
				"          gene_location as string,",
				"          gene as string,",
				"          gene_detail as string,",
				"          consequence as string,",
				"          aa_change as string,",
				"          other_aa_changes as string,",
				"          cosmic as string,",
				"          supporting_reads as string,",
				"          total_depth as string,",
				"          variant_allele_frequency as string,",
				"          file_name as string,",
				"          load_date as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: true) ~> sourceRaw",
				"source(output(",
				"          study_id as string,",
				"          donor as string,",
				"          session_id as string,",
				"          sample_number as string,",
				"          timepoint as string,",
				"          chr as string,",
				"          pos as string,",
				"          ref as string,",
				"          alt as string,",
				"          gene_location as string,",
				"          gene as string,",
				"          gene_detail as string,",
				"          consequence as string,",
				"          aa_change as string,",
				"          other_aa_changes as string,",
				"          cosmic as string,",
				"          supporting_reads as string,",
				"          total_depth as string,",
				"          variant_allele_frequency as string,",
				"          file_name as string,",
				"          eff_start_date as timestamp,",
				"          eff_end_date as timestamp,",
				"          created_date as timestamp,",
				"          last_updated_date as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: true) ~> sourceFact",
				"sourceRaw derive(eff_start_date = currentUTC('PST'),",
				"          eff_end_date = toDate('9999-12-31'),",
				"          created_date = currentUTC('PST'),",
				"          last_updated_date = currentUTC('PST')) ~> deriveDateColumns",
				"sourceFact select(mapColumn(",
				"          tgtstudy_id = study_id,",
				"          donor,",
				"          tgtsession_id = session_id,",
				"          sample_number,",
				"          timepoint,",
				"          chr,",
				"          pos,",
				"          ref,",
				"          alt,",
				"          gene_location,",
				"          gene,",
				"          gene_detail,",
				"          consequence,",
				"          aa_change,",
				"          other_aa_changes,",
				"          cosmic,",
				"          supporting_reads,",
				"          total_depth,",
				"          variant_allele_frequency,",
				"          file_name,",
				"          eff_start_date,",
				"          tgteff_end_date = eff_end_date,",
				"          created_date,",
				"          last_updated_date",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectFact",
				"selectFact filter(toString(toDate(tgteff_end_date))=='9999-12-31') ~> filterFact",
				"sourceRaw, filterFact lookup(study_id == tgtstudy_id",
				"     && session_id == tgtsession_id,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookupFact",
				"filterNotNullStudySessionID select(mapColumn(",
				"          study_id = tgtstudy_id,",
				"          donor = selectFact@donor,",
				"          session_id = tgtsession_id,",
				"          sample_number = selectFact@sample_number,",
				"          timepoint = selectFact@timepoint,",
				"          chr = selectFact@chr,",
				"          pos = selectFact@pos,",
				"          ref = selectFact@ref,",
				"          alt = selectFact@alt,",
				"          gene_location = selectFact@gene_location,",
				"          gene = selectFact@gene,",
				"          gene_detail = selectFact@gene_detail,",
				"          consequence = selectFact@consequence,",
				"          aa_change = selectFact@aa_change,",
				"          other_aa_changes = selectFact@other_aa_changes,",
				"          cosmic = selectFact@cosmic,",
				"          supporting_reads = selectFact@supporting_reads,",
				"          total_depth = selectFact@total_depth,",
				"          variant_allele_frequency = selectFact@variant_allele_frequency,",
				"          file_name = selectFact@file_name,",
				"          eff_start_date,",
				"          created_date",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectColumns",
				"lookupFact filter(and(!isNull(tgtstudy_id),!isNull(tgtsession_id))) ~> filterNotNullStudySessionID",
				"selectColumns derive(eff_end_date = currentUTC('PST'),",
				"          last_updated_date = currentUTC('PST')) ~> UpdateDateColumns",
				"UpdateDateColumns alterRow(updateIf(true())) ~> AlterRowUpdate",
				"deriveDateColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 2,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          study_id,",
				"          donor,",
				"          session_id,",
				"          sample_number,",
				"          timepoint,",
				"          chr,",
				"          pos,",
				"          ref,",
				"          alt,",
				"          gene_location,",
				"          gene,",
				"          gene_detail,",
				"          consequence,",
				"          aa_change,",
				"          other_aa_changes,",
				"          cosmic,",
				"          supporting_reads,",
				"          total_depth,",
				"          variant_allele_frequency,",
				"          file_name,",
				"          eff_start_date,",
				"          eff_end_date,",
				"          created_date,",
				"          last_updated_date",
				"     )) ~> InsertNewData",
				"AlterRowUpdate sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['study_id','session_id'],",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          study_id,",
				"          donor,",
				"          session_id,",
				"          sample_number,",
				"          timepoint,",
				"          chr,",
				"          pos,",
				"          ref,",
				"          alt,",
				"          gene_location,",
				"          gene,",
				"          gene_detail,",
				"          consequence,",
				"          aa_change,",
				"          other_aa_changes,",
				"          cosmic,",
				"          supporting_reads,",
				"          total_depth,",
				"          variant_allele_frequency,",
				"          file_name,",
				"          eff_start_date,",
				"          eff_end_date,",
				"          created_date,",
				"          last_updated_date",
				"     )) ~> UpdateFact"
			]
		}
	}
}