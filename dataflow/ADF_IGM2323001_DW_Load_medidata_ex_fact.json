{
	"name": "ADF_IGM2323001_DW_Load_medidata_ex_fact",
	"properties": {
		"description": "Dataflow to implement SCD Type 2 for Medidata EX Fact Table",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_AzureSQL",
						"type": "DatasetReference"
					},
					"name": "sourceRaw"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_AzureSQL",
						"type": "DatasetReference"
					},
					"name": "InsertNewData"
				}
			],
			"transformations": [
				{
					"name": "deriveDateColumns"
				}
			],
			"scriptLines": [
				"source(output(",
				"          project as string,",
				"          study_id as string,",
				"          subject as string,",
				"          site as string,",
				"          site_number as string,",
				"          site_group as string,",
				"          instance_name as string,",
				"          instance_repeat_number as string,",
				"          folder_name as string,",
				"          data_page_name as string,",
				"          record_position as string,",
				"          save_ts as string,",
				"          study_env_site_number as string,",
				"          excyc as string,",
				"          excyc_std as string,",
				"          exday as string,",
				"          exday_raw as string,",
				"          exyn as string,",
				"          exyn_std as string,",
				"          exnacn as string,",
				"          exnacn_std as string,",
				"          exreasos as string,",
				"          exreasos_std as string,",
				"          exnae as string,",
				"          exnae_std as string,",
				"          exnos as string,",
				"          exdosadj as string,",
				"          exdosadj_std as string,",
				"          exadj as string,",
				"          exadj_std as string,",
				"          exrdae as string,",
				"          exrdae_std as string,",
				"          exrdos as string,",
				"          expdose as string,",
				"          expdose_raw as string,",
				"          expvamt as string,",
				"          expvamt_raw as string,",
				"          exvamt as string,",
				"          exvamt_raw as string,",
				"          exdose as string,",
				"          exdose_raw as string,",
				"          exdat as string,",
				"          exdat_raw as string,",
				"          exdat_int as string,",
				"          exdat_yyyy as string,",
				"          exdat_mm as string,",
				"          exdat_dd as string,",
				"          exsttm as string,",
				"          exentm as string,",
				"          exstdtm as string,",
				"          exstdtm_raw as string,",
				"          exstdtm_int as string,",
				"          exstdtm_yyyy as string,",
				"          exstdtm_mm as string,",
				"          exstdtm_dd as string,",
				"          exendtm as string,",
				"          exendtm_raw as string,",
				"          exendtm_int as string,",
				"          exendtm_yyyy as string,",
				"          exendtm_mm as string,",
				"          exendtm_dd as string,",
				"          exinyn as string,",
				"          exinyn_std as string,",
				"          expmedyn as string,",
				"          expmedyn_std as string,",
				"          exnow as string,",
				"          exnow_raw as string,",
				"          exnow_int as string,",
				"          exnow_yyyy as string,",
				"          exnow_mm as string,",
				"          exnow_dd as string,",
				"          exrtrt as string,",
				"          exrtrt_std as string,",
				"          exextday as string,",
				"          exextday_std as string,",
				"          file_name as string,",
				"          load_date as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: true) ~> sourceRaw",
				"sourceRaw derive(eff_start_date = currentUTC('PST'),",
				"          eff_end_date = toDate('9999-12-31'),",
				"          created_date = currentUTC('PST'),",
				"          last_updated_date = currentUTC('PST'),",
				"          save_ts = toTimestamp(save_ts, 'M/d/yyyy h:mm:ss a'),",
				"          exdat = toTimestamp(exdat,'M/d/yyyy hh:mm:ss a'),",
				"          exdat_raw = toDate(exdat_raw,'dd MMM yyyy'),",
				"          exdat_int = toTimestamp(exdat_int,'M/d/yyyy h:m:s a'),",
				"          exstdtm = toTimestamp(exstdtm,'M/d/yyyy hh:mm:ss a'),",
				"          exstdtm_raw = toTimestamp(exstdtm_raw,'dd MMM yyyy HH:mm'),",
				"          exstdtm_int = toTimestamp(exstdtm_int,'M/d/yyyy hh:mm:ss a'),",
				"          exendtm = toTimestamp(exendtm,'M/d/yyyy hh:mm:ss a'),",
				"          exendtm_raw = toTimestamp(exendtm_raw,'dd MMM yyyy HH:mm'),",
				"          exendtm_int = toTimestamp(exendtm,'M/d/yyyy hh:mm:ss a'),",
				"          exnow = toTimestamp(exnow,'M/d/yyyy hh:mm:ss a'),",
				"          exnow_raw = toTimestamp(lower(exnow_raw),'dd MMM yyyy HH:mm:ss'),",
				"          exnow_int = toTimestamp(exnow_int,'M/d/yyyy hh:mm:ss a')) ~> deriveDateColumns",
				"deriveDateColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          project,",
				"          study_id,",
				"          subject,",
				"          site,",
				"          site_number,",
				"          site_group,",
				"          instance_name,",
				"          instance_repeat_number,",
				"          folder_name,",
				"          data_page_name,",
				"          record_position,",
				"          save_ts,",
				"          study_env_site_number,",
				"          excyc,",
				"          excyc_std,",
				"          exday,",
				"          exday_raw,",
				"          exyn,",
				"          exyn_std,",
				"          exnacn,",
				"          exnacn_std,",
				"          exreasos,",
				"          exreasos_std,",
				"          exnae,",
				"          exnae_std,",
				"          exnos,",
				"          exdosadj,",
				"          exdosadj_std,",
				"          exadj,",
				"          exadj_std,",
				"          exrdae,",
				"          exrdae_std,",
				"          exrdos,",
				"          expdose,",
				"          expdose_raw,",
				"          expvamt,",
				"          expvamt_raw,",
				"          exvamt,",
				"          exvamt_raw,",
				"          exdose,",
				"          exdose_raw,",
				"          exdat,",
				"          exdat_raw,",
				"          exdat_int,",
				"          exdat_yyyy,",
				"          exdat_mm,",
				"          exdat_dd,",
				"          exsttm,",
				"          exentm,",
				"          exstdtm,",
				"          exstdtm_raw,",
				"          exstdtm_int,",
				"          exstdtm_yyyy,",
				"          exstdtm_mm,",
				"          exstdtm_dd,",
				"          exendtm,",
				"          exendtm_raw,",
				"          exendtm_int,",
				"          exendtm_yyyy,",
				"          exendtm_mm,",
				"          exendtm_dd,",
				"          exinyn,",
				"          exinyn_std,",
				"          expmedyn,",
				"          expmedyn_std,",
				"          exnow,",
				"          exnow_raw,",
				"          exnow_int,",
				"          exnow_yyyy,",
				"          exnow_mm,",
				"          exnow_dd,",
				"          exrtrt,",
				"          exrtrt_std,",
				"          exextday,",
				"          exextday_std,",
				"          file_name,",
				"          eff_start_date,",
				"          eff_end_date,",
				"          created_date,",
				"          last_updated_date",
				"     )) ~> InsertNewData"
			]
		}
	}
}