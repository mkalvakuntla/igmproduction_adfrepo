{
	"name": "ADF_IGM2323001_DW_Load_medidata_hm_fact",
	"properties": {
		"description": "Dataflow to implement SCD Type 2 for Medidata HM Fact Table",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_AzureSQL",
						"type": "DatasetReference"
					},
					"name": "sourceRaw"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_AzureSQL",
						"type": "DatasetReference"
					},
					"name": "InsertNewData"
				}
			],
			"transformations": [
				{
					"name": "deriveDateColumns"
				}
			],
			"scriptLines": [
				"source(output(",
				"          project as string,",
				"          study_id as string,",
				"          subject as string,",
				"          site as string,",
				"          site_number as string,",
				"          site_group as string,",
				"          instance_name as string,",
				"          instance_repeat_number as string,",
				"          folder_name as string,",
				"          data_page_name as string,",
				"          record_position as string,",
				"          save_ts as string,",
				"          study_env_site_number as string,",
				"          hmperf as string,",
				"          hmperf_std as string,",
				"          hmdat as string,",
				"          hmdat_raw as string,",
				"          hmdat_int as string,",
				"          hmdat_yyyy as string,",
				"          hmdat_mm as string,",
				"          hmdat_dd as string,",
				"          hmage as string,",
				"          hmage_raw as string,",
				"          hmwbc as string,",
				"          hmwbc_raw as string,",
				"          hmwbc_un as string,",
				"          hmrbc as string,",
				"          hmrbc_raw as string,",
				"          hmrbc_un as string,",
				"          hmhg as string,",
				"          hmhg_raw as string,",
				"          hmhg_un as string,",
				"          hmhm as string,",
				"          hmhm_raw as string,",
				"          hmhm_un as string,",
				"          hmpl as string,",
				"          hmpl_raw as string,",
				"          hmpl_un as string,",
				"          hmnep as string,",
				"          hmnep_raw as string,",
				"          hmnep_un as string,",
				"          hmlyp as string,",
				"          hmlyp_raw as string,",
				"          hmlyp_un as string,",
				"          hmmop as string,",
				"          hmmop_raw as string,",
				"          hmmop_un as string,",
				"          hmbap as string,",
				"          hmbap_raw as string,",
				"          hmbap_un as string,",
				"          hmeop as string,",
				"          hmeop_raw as string,",
				"          hmeop_un as string,",
				"          hmneu as string,",
				"          hmneu_raw as string,",
				"          hmneu_un as string,",
				"          hmlym as string,",
				"          hmlym_raw as string,",
				"          hmlym_un as string,",
				"          hmmon as string,",
				"          hmmon_raw as string,",
				"          hmmon_un as string,",
				"          hmbas as string,",
				"          hmbas_raw as string,",
				"          hmbas_un as string,",
				"          hmeos as string,",
				"          hmeos_raw as string,",
				"          hmeos_un as string,",
				"          hmtim as string,",
				"          hmdtm as string,",
				"          hmdtm_raw as string,",
				"          hmdtm_int as string,",
				"          hmdtm_yyyy as string,",
				"          hmdtm_mm as string,",
				"          hmdtm_dd as string,",
				"          file_name as string,",
				"          load_date as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: true) ~> sourceRaw",
				"sourceRaw derive(eff_start_date = currentUTC('PST'),",
				"          eff_end_date = toDate('9999-12-31'),",
				"          created_date = currentUTC('PST'),",
				"          last_updated_date = currentUTC('PST'),",
				"          save_ts = toTimestamp(save_ts, 'M/d/yyyy h:mm:ss a'),",
				"          hmdat = toTimestamp(hmdat,'M/d/yyyy hh:mm:ss a'),",
				"          hmdat_raw = toDate(hmdat_raw,'dd MMM yyyy'),",
				"          hmdat_int = toTimestamp(hmdat_int,'M/d/yyyy h:m:s a'),",
				"          hmdtm = toTimestamp(hmdtm,'M/d/yyyy hh:mm:ss a'),",
				"          hmdtm_raw = toTimestamp(hmdtm_raw,'dd MMM yyyy HH:mm'),",
				"          hmdtm_int = toTimestamp(hmdtm_int,'M/d/yyyy hh:mm:ss a')) ~> deriveDateColumns",
				"deriveDateColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          project,",
				"          study_id,",
				"          subject,",
				"          site,",
				"          site_number,",
				"          site_group,",
				"          instance_name,",
				"          instance_repeat_number,",
				"          folder_name,",
				"          data_page_name,",
				"          record_position,",
				"          save_ts,",
				"          study_env_site_number,",
				"          hmperf,",
				"          hmperf_std,",
				"          hmdat,",
				"          hmdat_raw,",
				"          hmdat_int,",
				"          hmdat_yyyy,",
				"          hmdat_mm,",
				"          hmdat_dd,",
				"          hmage,",
				"          hmage_raw,",
				"          hmwbc,",
				"          hmwbc_raw,",
				"          hmwbc_un,",
				"          hmrbc,",
				"          hmrbc_raw,",
				"          hmrbc_un,",
				"          hmhg,",
				"          hmhg_raw,",
				"          hmhg_un,",
				"          hmhm,",
				"          hmhm_raw,",
				"          hmhm_un,",
				"          hmpl,",
				"          hmpl_raw,",
				"          hmpl_un,",
				"          hmnep,",
				"          hmnep_raw,",
				"          hmnep_un,",
				"          hmlyp,",
				"          hmlyp_raw,",
				"          hmlyp_un,",
				"          hmmop,",
				"          hmmop_raw,",
				"          hmmop_un,",
				"          hmbap,",
				"          hmbap_raw,",
				"          hmbap_un,",
				"          hmeop,",
				"          hmeop_raw,",
				"          hmeop_un,",
				"          hmneu,",
				"          hmneu_raw,",
				"          hmneu_un,",
				"          hmlym,",
				"          hmlym_raw,",
				"          hmlym_un,",
				"          hmmon,",
				"          hmmon_raw,",
				"          hmmon_un,",
				"          hmbas,",
				"          hmbas_raw,",
				"          hmbas_un,",
				"          hmeos,",
				"          hmeos_raw,",
				"          hmeos_un,",
				"          hmtim,",
				"          hmdtm,",
				"          hmdtm_raw,",
				"          hmdtm_int,",
				"          hmdtm_yyyy,",
				"          hmdtm_mm,",
				"          hmdtm_dd,",
				"          file_name,",
				"          eff_start_date,",
				"          eff_end_date,",
				"          created_date,",
				"          last_updated_date",
				"     )) ~> InsertNewData"
			]
		}
	}
}