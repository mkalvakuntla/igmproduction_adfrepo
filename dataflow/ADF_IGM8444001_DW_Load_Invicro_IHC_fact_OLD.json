{
	"name": "ADF_IGM8444001_DW_Load_Invicro_IHC_fact_OLD",
	"properties": {
		"description": "Dataflow to implement SCD Type 2 for Fact Table",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_AzureSQL",
						"type": "DatasetReference"
					},
					"name": "sourceRaw"
				},
				{
					"dataset": {
						"referenceName": "DS_AzureSQL",
						"type": "DatasetReference"
					},
					"name": "sourceFact"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_AzureSQL",
						"type": "DatasetReference"
					},
					"name": "InsertNewData"
				},
				{
					"dataset": {
						"referenceName": "DS_AzureSQL",
						"type": "DatasetReference"
					},
					"name": "UpdateFact"
				}
			],
			"transformations": [
				{
					"name": "deriveDateColumns"
				},
				{
					"name": "selectFact"
				},
				{
					"name": "filterFact"
				},
				{
					"name": "lookupFact"
				},
				{
					"name": "selectColumns"
				},
				{
					"name": "filterNotNullCovaAccNo"
				},
				{
					"name": "UpdateDateColumns"
				},
				{
					"name": "AlterRowUpdate"
				}
			],
			"scriptLines": [
				"source(output(",
				"          study_name as string,",
				"          patient_id as string,",
				"          block_id as string,",
				"          specimen_id as string,",
				"          covance_accession_no as string,",
				"          timepoint as string,",
				"          drc_ihc_stained_0 as string,",
				"          drc_ihc_stained_1plus as string,",
				"          drc_ihc_stained_2plus as string,",
				"          drc_ihc_stained_3plus as string,",
				"          cc3_ihc_membranous_0 as string,",
				"          cc3_ihc_membranous_1plus as string,",
				"          cc3_ihc_membranous_2plus as string,",
				"          cc3_ihc_membranous_3plus as string,",
				"          cc3_ihc_cytoplasmic_0 as string,",
				"          cc3_ihc_cytoplasmic_1plus as string,",
				"          cc3_ihc_cytoplasmic_2plus as string,",
				"          cc3_ihc_cytoplasmic_3plus as string,",
				"          comments as string,",
				"          file_name as string,",
				"          load_date as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: true) ~> sourceRaw",
				"source(output(",
				"          study_name as string,",
				"          patient_id as string,",
				"          block_id as string,",
				"          specimen_id as string,",
				"          covance_accession_no as string,",
				"          timepoint as string,",
				"          drc_ihc_stained_0 as string,",
				"          drc_ihc_stained_1plus as string,",
				"          drc_ihc_stained_2plus as string,",
				"          drc_ihc_stained_3plus as string,",
				"          cc3_ihc_membranous_0 as string,",
				"          cc3_ihc_membranous_1plus as string,",
				"          cc3_ihc_membranous_2plus as string,",
				"          cc3_ihc_membranous_3plus as string,",
				"          cc3_ihc_cytoplasmic_0 as string,",
				"          cc3_ihc_cytoplasmic_1plus as string,",
				"          cc3_ihc_cytoplasmic_2plus as string,",
				"          cc3_ihc_cytoplasmic_3plus as string,",
				"          comments as string,",
				"          file_name as string,",
				"          eff_start_date as timestamp,",
				"          eff_end_date as timestamp,",
				"          created_date as timestamp,",
				"          last_updated_date as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: true) ~> sourceFact",
				"sourceRaw derive(eff_start_date = currentUTC('PST'),",
				"          eff_end_date = toDate('9999-12-31'),",
				"          created_date = currentUTC('PST'),",
				"          last_updated_date = currentUTC('PST')) ~> deriveDateColumns",
				"sourceFact select(mapColumn(",
				"          study_name,",
				"          patient_id,",
				"          block_id,",
				"          specimen_id,",
				"          covance_accession_no,",
				"          timepoint,",
				"          drc_ihc_stained_0,",
				"          drc_ihc_stained_1plus,",
				"          drc_ihc_stained_2plus,",
				"          drc_ihc_stained_3plus,",
				"          cc3_ihc_membranous_0,",
				"          cc3_ihc_membranous_1plus,",
				"          cc3_ihc_membranous_2plus,",
				"          cc3_ihc_membranous_3plus,",
				"          cc3_ihc_cytoplasmic_0,",
				"          cc3_ihc_cytoplasmic_1plus,",
				"          cc3_ihc_cytoplasmic_2plus,",
				"          cc3_ihc_cytoplasmic_3plus,",
				"          comments,",
				"          file_name,",
				"          eff_start_date,",
				"          tgteff_end_date = eff_end_date,",
				"          created_date,",
				"          last_updated_date",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectFact",
				"selectFact filter(toString(toDate(tgteff_end_date))=='9999-12-31') ~> filterFact",
				"sourceRaw, filterFact lookup(sourceRaw@covance_accession_no == selectFact@covance_accession_no,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookupFact",
				"filterNotNullCovaAccNo select(mapColumn(",
				"          study_name = selectFact@study_name,",
				"          patient_id = selectFact@patient_id,",
				"          block_id = selectFact@block_id,",
				"          specimen_id = selectFact@specimen_id,",
				"          covance_accession_no = selectFact@covance_accession_no,",
				"          timepoint = selectFact@timepoint,",
				"          drc_ihc_stained_0 = selectFact@drc_ihc_stained_0,",
				"          drc_ihc_stained_1plus = selectFact@drc_ihc_stained_1plus,",
				"          drc_ihc_stained_2plus = selectFact@drc_ihc_stained_2plus,",
				"          drc_ihc_stained_3plus = selectFact@drc_ihc_stained_3plus,",
				"          cc3_ihc_membranous_0 = selectFact@cc3_ihc_membranous_0,",
				"          cc3_ihc_membranous_1plus = selectFact@cc3_ihc_membranous_1plus,",
				"          cc3_ihc_membranous_2plus = selectFact@cc3_ihc_membranous_2plus,",
				"          cc3_ihc_membranous_3plus = selectFact@cc3_ihc_membranous_3plus,",
				"          cc3_ihc_cytoplasmic_0 = selectFact@cc3_ihc_cytoplasmic_0,",
				"          cc3_ihc_cytoplasmic_1plus = selectFact@cc3_ihc_cytoplasmic_1plus,",
				"          cc3_ihc_cytoplasmic_2plus = selectFact@cc3_ihc_cytoplasmic_2plus,",
				"          cc3_ihc_cytoplasmic_3plus = selectFact@cc3_ihc_cytoplasmic_3plus,",
				"          comments = selectFact@comments,",
				"          file_name = selectFact@file_name,",
				"          eff_start_date,",
				"          created_date",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectColumns",
				"lookupFact filter(!isNull(selectFact@covance_accession_no)) ~> filterNotNullCovaAccNo",
				"selectColumns derive(eff_end_date = currentUTC('PST'),",
				"          last_updated_date = currentUTC('PST')) ~> UpdateDateColumns",
				"UpdateDateColumns alterRow(updateIf(true())) ~> AlterRowUpdate",
				"deriveDateColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 2,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          study_name,",
				"          patient_id,",
				"          block_id,",
				"          specimen_id,",
				"          covance_accession_no,",
				"          timepoint,",
				"          drc_ihc_stained_0,",
				"          drc_ihc_stained_1plus,",
				"          drc_ihc_stained_2plus,",
				"          drc_ihc_stained_3plus,",
				"          cc3_ihc_membranous_0,",
				"          cc3_ihc_membranous_1plus,",
				"          cc3_ihc_membranous_2plus,",
				"          cc3_ihc_membranous_3plus,",
				"          cc3_ihc_cytoplasmic_0,",
				"          cc3_ihc_cytoplasmic_1plus,",
				"          cc3_ihc_cytoplasmic_2plus,",
				"          cc3_ihc_cytoplasmic_3plus,",
				"          comments,",
				"          file_name,",
				"          eff_start_date,",
				"          eff_end_date,",
				"          created_date,",
				"          last_updated_date",
				"     )) ~> InsertNewData",
				"AlterRowUpdate sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['covance_accession_no'],",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          study_name,",
				"          patient_id,",
				"          block_id,",
				"          specimen_id,",
				"          covance_accession_no,",
				"          timepoint,",
				"          drc_ihc_stained_0,",
				"          drc_ihc_stained_1plus,",
				"          drc_ihc_stained_2plus,",
				"          drc_ihc_stained_3plus,",
				"          cc3_ihc_membranous_0,",
				"          cc3_ihc_membranous_1plus,",
				"          cc3_ihc_membranous_2plus,",
				"          cc3_ihc_membranous_3plus,",
				"          cc3_ihc_cytoplasmic_0,",
				"          cc3_ihc_cytoplasmic_1plus,",
				"          cc3_ihc_cytoplasmic_2plus,",
				"          cc3_ihc_cytoplasmic_3plus,",
				"          comments,",
				"          file_name,",
				"          eff_start_date,",
				"          created_date,",
				"          eff_end_date,",
				"          last_updated_date",
				"     )) ~> UpdateFact"
			]
		}
	}
}