{
	"name": "ADF_IGM8444001_DW_Load_q2_solutions_flow_data_infosario_fact",
	"properties": {
		"description": "Dataflow to implement SCD Type 2 for Fact Table",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_AzureSQL",
						"type": "DatasetReference"
					},
					"name": "sourceRaw"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_AzureSQL",
						"type": "DatasetReference"
					},
					"name": "InsertNewData"
				}
			],
			"transformations": [
				{
					"name": "deriveDateColumns"
				}
			],
			"scriptLines": [
				"source(output(",
				"          version as string,",
				"          filcrdtm as string,",
				"          trmsrnum as string,",
				"          trmsrnam as string,",
				"          studyid as string,",
				"          studnam as string,",
				"          trmtyp as string,",
				"          siteid as string,",
				"          invid as string,",
				"          invnam as string,",
				"          scrnnum as string,",
				"          subjid as string,",
				"          subjsid as string,",
				"          subjinit as string,",
				"          sex as string,",
				"          sexcd as string,",
				"          brthdtm as string,",
				"          race as string,",
				"          racecd as string,",
				"          visitnum as string,",
				"          visit as string,",
				"          visittyp as string,",
				"          visitmod as string,",
				"          lbnum as string,",
				"          lbnam as string,",
				"          accsnnum as string,",
				"          lactdtm as string,",
				"          recextyp as string,",
				"          specnum as string,",
				"          lbdtm as string,",
				"          ptmel as string,",
				"          ptmeltx as string,",
				"          colendtm as string,",
				"          rcvdtm as string,",
				"          speccnd as string,",
				"          speccom as string,",
				"          specicom as string,",
				"          specmnum as string,",
				"          specmcd as string,",
				"          lbspec as string,",
				"          ageatcol as string,",
				"          ageu as string,",
				"          faststat as string,",
				"          battrid as string,",
				"          battrnam as string,",
				"          plbnum as string,",
				"          plbnam as string,",
				"          lbtestcd as string,",
				"          lbtest as string,",
				"          tstcd as string,",
				"          tstnam as string,",
				"          lbloinc as string,",
				"          loinccd as string,",
				"          tstdesc as string,",
				"          tststat as string,",
				"          tstcom as string,",
				"          tstdtm as string,",
				"          tsttyp as string,",
				"          rptresc as string,",
				"          rptrescd as string,",
				"          rptresn as string,",
				"          rptresnp as string,",
				"          rptnrlo as string,",
				"          rptnrhi as string,",
				"          rptu as string,",
				"          rptucd as string,",
				"          cnvresc as string,",
				"          cnvrescd as string,",
				"          cnvresn as string,",
				"          cnvresnp as string,",
				"          cnvnrlo as string,",
				"          cnvnrhi as string,",
				"          cnvu as string,",
				"          cnvucd as string,",
				"          siresc as string,",
				"          sirescd as string,",
				"          siresn as string,",
				"          siresnp as string,",
				"          sinrlo as string,",
				"          sinrhi as string,",
				"          siu as string,",
				"          siucd as string,",
				"          rptrtyp as string,",
				"          rptrstat as string,",
				"          alrtfl as string,",
				"          deltfl as string,",
				"          toxgr as string,",
				"          toxgrcd as string,",
				"          exclfl as string,",
				"          blndfl as string,",
				"          rptdtm as string,",
				"          trnstyp as string,",
				"          file_name as string,",
				"          load_date as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: true) ~> sourceRaw",
				"sourceRaw derive(eff_start_date = currentUTC('PST'),",
				"          eff_end_date = toDate('9999-12-31'),",
				"          created_date = currentUTC('PST'),",
				"          last_updated_date = currentUTC('PST'),",
				"          filcrdtm = toTimestamp(replace(filcrdtm,'T',' '),'yyyy-MM-ddHH:mm:ss-S')) ~> deriveDateColumns",
				"deriveDateColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          each(match(true()))",
				"     )) ~> InsertNewData"
			]
		}
	}
}